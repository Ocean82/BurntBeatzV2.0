const TRACK_COLORS = [\"text-pink-400\", \"text-blue-400\", \"text-yellow-400\", \"text-green-400\", \"text-purple-400\"]\nconst NOTE_NAMES = [\"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\", \"C5\"]\n\nexport default function TrackEditor({ studio }) {\n  return (\n    <div className=\"flex-1 p-4\">\n      <h2 className=\"text-green-300 font-bold mb-4\">Tracks</h2>\n      <div className=\"space-y-4\">\n        {studio.tracks.map((track, idx) => (\n          <div key={track.id} className={`flex items-center space-x-4`}>\n            <span className={`font-bold ${TRACK_COLORS[idx % TRACK_COLORS.length]}`}>{track.instrument}</span>\n            <div className=\"flex space-x-1\">\n              {NOTE_NAMES.map((note, i) => (\n                <div\n                  key={i}\n                  className={`w-6 h-8 rounded ${track.notes.includes(i) ? \"bg-green-400\" : \"bg-gray-700\"} cursor-pointer`}\n                  onClick={async () => {\n                    studio.setTracks(tracks =>\n                      tracks.map(t =>\n                        t.id === track.id\n                          ? { ...t, notes: t.notes.includes(i) ? t.notes.filter(n => n !== i) : [...t.notes, i] }\n                          : t\n                      )\n                    )\n                  }}\n                  title={note}\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n
